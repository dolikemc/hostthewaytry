# Generated by Django 2.1.1 on 2018-09-25 08:59

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('places', '0014_auto_20180921_1657'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoName',
            fields=[
                ('geo_name_id',
                 models.PositiveIntegerField(help_text='integer id of record in geonames database', primary_key=True,
                                             serialize=False)),
                ('name', models.CharField(help_text='name of geographical point (utf8)', max_length=200)),
                ('ascii_name',
                 models.CharField(help_text='name of geographical point in plain ascii characters', max_length=200)),
                ('alternate_names', models.CharField(
                    help_text='comma separated, ascii names automatically transliterated, convenience attribute from alternatename table',
                    max_length=1000)),
                ('latitude',
                 models.DecimalField(decimal_places=10, help_text='latitude in decimal degrees', max_digits=13)),
                ('longitude',
                 models.DecimalField(decimal_places=10, help_text='longitude in decimal degrees', max_digits=13)),
                ('feature_class',
                 models.CharField(help_text='see http://www.geonames.org/export/codes.html', max_length=1)),
                ('feature_code',
                 models.CharField(help_text='see http://www.geonames.org/export/codes.html', max_length=10)),
                ('country_code', models.CharField(help_text='ISO-3166 2-letter country code', max_length=2)),
                ('alternate_country_codes',
                 models.CharField(help_text='alternate country codes, comma separated, ISO-3166 2-letter country code',
                                  max_length=200)),
                ('admin_1_code', models.CharField(
                    help_text='fipscode (subject to change to iso code), see exceptions below, see file admin1Codes.txt for display names of this code',
                    max_length=20)),
                ('admin_2_code', models.CharField(
                    help_text='code for the second administrative division, a county in the US, see file admin2Codes.txt',
                    max_length=80)),
                ('admin_3_code',
                 models.CharField(help_text='code for third level administrative division', max_length=20)),
                ('admin_4_code',
                 models.CharField(help_text='code for fourth level administrative division', max_length=20)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('elevation', models.PositiveIntegerField(blank=True, null=True)),
                ('dem', models.PositiveIntegerField(blank=True,
                                                    help_text='digital elevation model, srtm3 or gtopo30, average elevation of 3x3 (ca 90mx90m) or 30x30 (ca 900mx900m) area in meters, integer. srtm processed by cgiar/ciat',
                                                    null=True)),
                ('timezone', models.CharField(help_text='the iana timezone id (see file timeZone.txt)', max_length=40)),
                ('modification_date',
                 models.CharField(help_text='date of last modification in yyyy-MM-dd format', max_length=10)),
            ],
        ),
    ]
